rules:
  - id: go-service-mesh-bypass
    message: Service mesh TLS bypass detected - communication outside mesh security
    severity: ERROR
    languages:
      - go
    patterns:
      - pattern-either:
          # Direct HTTP bypass patterns - specific service mesh bypasses
          - pattern: |
              $URL := "http://" + $SERVICE_IP + ":" + $PORT
              ...
              http.$METHOD($URL)
          - pattern: |
              $URL := "http://" + $SERVICE_IP + ":" + $PORT
              ...
              http.$METHOD($URL, ...)
          - pattern: |
              $URL := "http://" + $ENDPOINT
              ...
              http.$METHOD($URL)
          - pattern: |
              $URL := "http://" + $ENDPOINT
              ...
              http.$METHOD($URL, ...)

          # HTTP client with proxy bypass - service mesh specific
          - pattern: |
              $CLIENT := &http.Client{
                Transport: &http.Transport{
                  Proxy: http.ProxyFromEnvironment,
                },
              }

          # Service discovery bypass loop - the complete pattern
          - pattern: |
              for _, $ENDPOINT := range $ENDPOINTS {
                $URL := "http://" + $ENDPOINT
                http.$METHOD($URL)
              }
          - pattern: |
              for _, $ENDPOINT := range $ENDPOINTS {
                $URL := "http://" + $ENDPOINT
                http.$METHOD($URL, ...)
              }

    fix: Use service mesh routing and let the mesh handle service-to-service communication
    metadata:
      category: tls_runtime_security
      cwe: CWE-295
      impact: Service mesh bypass eliminates mTLS protection and security observability
