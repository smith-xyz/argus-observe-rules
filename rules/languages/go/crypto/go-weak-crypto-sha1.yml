rules:
  - id: go-weak-crypto-sha1
    message: SHA1 hash function is cryptographically weak for security purposes
    severity: WARNING
    languages:
      - go
    patterns:
      - pattern-either:
          - pattern: sha1.New()
          - pattern: sha1.Sum($DATA)
          - pattern: |
              $HASHER := sha1.New()
              $HASHER.Write($DATA)
              $HASH := $HASHER.Sum($SUFFIX)
          - pattern: |
              $HASHER := sha1.New()
              ...
              $HASHER.Sum($SUFFIX)
          - pattern: crypto.SHA1.New()
          - pattern: |
              $HASH := crypto.SHA1
              $HASHER := $HASH.New()
          - pattern: var $HASHER hash.Hash = sha1.New()
          - pattern: $HASHER := hash.Hash(sha1.New())
          - pattern: hex.EncodeToString(sha1.Sum($DATA))
          - pattern: base64.StdEncoding.EncodeToString(sha1.Sum($DATA))
          - pattern: fmt.Sprintf("%x", sha1.Sum($DATA))
          - pattern: fmt.Sprintf("%X", sha1.Sum($DATA))
          - pattern: io.WriteString(sha1.New(), $DATA)
          - pattern: |
              $HASHER := sha1.New()
              io.Copy($HASHER, $READER)
          - pattern: hmac.New(sha1.New, $KEY)
          - pattern: hmac.New(crypto.SHA1.New, $KEY)
          - pattern: pbkdf2.Key($PASSWORD, $SALT, $ITER, $KEYLEN, sha1.New)
          - pattern: pbkdf2.Key($PASSWORD, $SALT, $ITER, $KEYLEN, crypto.SHA1.New)
          - pattern: rsa.SignPKCS1v15($RAND, $PRIV, crypto.SHA1, $HASHED)
          - pattern: rsa.VerifyPKCS1v15($PUB, crypto.SHA1, $HASHED, $SIG)
          - pattern: ecdsa.Sign($RAND, $PRIV, sha1.Sum($DATA))
          - pattern: $HASH := sha1.Sum($DATA)
          - pattern: $CHECKSUM := sha1.Sum($DATA)
    fix: "Use crypto/sha256 instead: sha256.New() or sha256.Sum256()"
    metadata:
      category: crypto
      cwe: CWE-327
      impact:
        SHA1 is vulnerable to collision attacks and should not be used for security
        purposes
